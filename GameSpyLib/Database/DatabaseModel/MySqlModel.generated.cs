//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace GameSpyLib.Database.DatabaseModel.MySql
{
	/// <summary>
	/// Database       : retrospy
	/// Data Source    : localhost
	/// Server Version : 5.5.5-10.4.7-MariaDB
	/// </summary>
	public partial class RetrospyDB : LinqToDB.Data.DataConnection
	{
		public ITable<@namespace> Namespaces  { get { return this.GetTable<@namespace>(); } }
		public ITable<Addrequest> Addrequests { get { return this.GetTable<Addrequest>(); } }
		public ITable<Blocked>    Blockeds    { get { return this.GetTable<Blocked>(); } }
		/// <summary>
		/// Buddy Status Info table
		/// </summary>
		public ITable<Buddystatu> Buddystatus { get { return this.GetTable<Buddystatu>(); } }
		public ITable<Friend>     Friends     { get { return this.GetTable<Friend>(); } }
		public ITable<Game>       Games       { get { return this.GetTable<Game>(); } }
		public ITable<Grouplist>  Grouplists  { get { return this.GetTable<Grouplist>(); } }
		public ITable<Message>    Messages    { get { return this.GetTable<Message>(); } }
		/// <summary>
		/// statusstring
		/// </summary>
		public ITable<Profile>    Profiles    { get { return this.GetTable<Profile>(); } }
		public ITable<User>       Users       { get { return this.GetTable<User>(); } }

		public RetrospyDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public RetrospyDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("namespace")]
	public partial class @namespace
	{
		[Column("id"),          PrimaryKey,  Identity] public uint   Id          { get; set; } // int(11) unsigned
		[Column("profileid"),   NotNull              ] public uint   Profileid   { get; set; } // int(11) unsigned
		[Column("uniquenick"),  NotNull              ] public string Uniquenick  { get; set; } // varchar(50)
		[Column("namespaceid"), NotNull              ] public uint   Namespaceid { get; set; } // int(11) unsigned
		[Column("partnerid"),   NotNull              ] public uint   Partnerid   { get; set; } // int(11) unsigned
		[Column("productid"),      Nullable          ] public uint?  Productid   { get; set; } // int(11) unsigned
		[Column("gamename"),       Nullable          ] public string Gamename    { get; set; } // text
		[Column("cdkeyenc"),       Nullable          ] public string Cdkeyenc    { get; set; } // varchar(50)
		[Column("sesskey"),        Nullable          ] public uint?  Sesskey     { get; set; } // int(11) unsigned
		[Column("firewall"),    NotNull              ] public bool   Firewall    { get; set; } // tinyint(1)
		[Column("port"),        NotNull              ] public uint   Port        { get; set; } // int(10) unsigned
		[Column("authtoken"),      Nullable          ] public string Authtoken   { get; set; } // varchar(255)

		#region Associations

		/// <summary>
		/// FK_blocked_namespace_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Profileid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Blocked> Blockeds { get; set; }

		/// <summary>
		/// FK3_blocked_profile_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Targetid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Blocked> FK3blockedprofiles { get; set; }

		/// <summary>
		/// FK3_namespaceid_BackReference
		/// </summary>
		[Association(ThisKey="Namespaceid", OtherKey="Namespaceid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Addrequest> FK3namespaceids { get; set; }

		/// <summary>
		/// FK_blocked_namespace_3_BackReference
		/// </summary>
		[Association(ThisKey="Namespaceid", OtherKey="Namespaceid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Blocked> FkBlockedNamespace3BackReferences { get; set; }

		/// <summary>
		/// FK1_profile_profileid
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK1_profile_profileid", BackReferenceName="FK1profileprofileids")]
		public Profile Profile { get; set; }

		#endregion
	}

	[Table("addrequests")]
	public partial class Addrequest
	{
		[Column("id"),            Identity] public uint   Id            { get; set; } // int(10) unsigned
		[Column("profileid"),     NotNull ] public uint   Profileid     { get; set; } // int(10) unsigned
		[Column("targetid"),      NotNull ] public uint   Targetid      { get; set; } // int(11) unsigned
		[Column("namespaceid"),   NotNull ] public uint   Namespaceid   { get; set; } // int(11) unsigned
		[Column("reason"),        NotNull ] public string Reason        { get; set; } // varchar(255)
		[Column("syncrequested"), NotNull ] public string Syncrequested { get; set; } // varchar(255)

		#region Associations

		/// <summary>
		/// FK3_namespaceid
		/// </summary>
		[Association(ThisKey="Namespaceid", OtherKey="Namespaceid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK3_namespaceid", BackReferenceName="FK3namespaceids")]
		public @namespace @namespace { get; set; }

		/// <summary>
		/// FK_addrequests_profiles
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_addrequests_profiles", BackReferenceName="Addrequests")]
		public Profile Profile { get; set; }

		/// <summary>
		/// FK_addrequests_profiles_2
		/// </summary>
		[Association(ThisKey="Targetid", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_addrequests_profiles_2", BackReferenceName="FkAddrequestsProfiles2BackReferences")]
		public Profile Target { get; set; }

		#endregion
	}

	[Table("blocked")]
	public partial class Blocked
	{
		[Column("id"),          Identity] public uint Id          { get; set; } // int(11) unsigned
		[Column("profileid"),   NotNull ] public uint Profileid   { get; set; } // int(11) unsigned
		[Column("targetid"),    NotNull ] public uint Targetid    { get; set; } // int(10) unsigned
		[Column("namespaceid"), NotNull ] public uint Namespaceid { get; set; } // int(11) unsigned

		#region Associations

		/// <summary>
		/// FK_blocked_namespace_3
		/// </summary>
		[Association(ThisKey="Namespaceid", OtherKey="Namespaceid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_blocked_namespace_3", BackReferenceName="FkBlockedNamespace3BackReferences")]
		public @namespace @namespace { get; set; }

		/// <summary>
		/// FK_blocked_namespace
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_blocked_namespace", BackReferenceName="Blockeds")]
		public @namespace Profile { get; set; }

		/// <summary>
		/// FK3_blocked_profile
		/// </summary>
		[Association(ThisKey="Targetid", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK3_blocked_profile", BackReferenceName="FK3blockedprofiles")]
		public @namespace Target { get; set; }

		#endregion
	}

	/// <summary>
	/// Buddy Status Info table
	/// </summary>
	[Table("buddystatus")]
	public partial class Buddystatu
	{
		[Column("profileid"),      NotNull    ] public uint   Profileid      { get; set; } // int(10) unsigned
		[Column("namespaceid"),    NotNull    ] public uint   Namespaceid    { get; set; } // int(10) unsigned
		[Column("profile"),           Nullable] public uint?  Profile        { get; set; } // int(10) unsigned zerofill
		[Column("statusstate"),       Nullable] public string Statusstate    { get; set; } // enum('OFFLINE','ONLINE','PLAYING','STAGING','CHATTING','AWAY')
		[Column("buddyip"),           Nullable] public string Buddyip        { get; set; } // varchar(16)
		[Column("hostip"),            Nullable] public string Hostip         { get; set; } // varchar(16)
		[Column("hostprivateip"),     Nullable] public string Hostprivateip  { get; set; } // varchar(16)
		[Column("queryreport"),       Nullable] public sbyte? Queryreport    { get; set; } // tinyint(4)
		[Column("hostport"),          Nullable] public sbyte? Hostport       { get; set; } // tinyint(4)
		[Column("sessionflags"),      Nullable] public uint?  Sessionflags   { get; set; } // int(10) unsigned
		[Column("richstatus"),        Nullable] public string Richstatus     { get; set; } // varchar(256)
		[Column("gametype"),          Nullable] public string Gametype       { get; set; } // varchar(33)
		[Column("gamevariant"),       Nullable] public string Gamevariant    { get; set; } // varchar(33)
		[Column("gamemapname"),       Nullable] public string Gamemapname    { get; set; } // varchar(33)
		[Column("productid"),      NotNull    ] public sbyte  Productid      { get; set; } // tinyint(3) unsigned
		[Column("quietmodefalgs"), NotNull    ] public string Quietmodefalgs { get; set; } // enum('NONE','MESSAGE','UTMS','LIST','ALL')
	}

	[Table("friends")]
	public partial class Friend
	{
		[Column("id"),          PrimaryKey, Identity] public uint Id          { get; set; } // int(11) unsigned
		[Column("profileid"),   NotNull             ] public uint Profileid   { get; set; } // int(11) unsigned
		[Column("targetid"),    NotNull             ] public uint Targetid    { get; set; } // int(11) unsigned
		[Column("namespaceid"), NotNull             ] public uint Namespaceid { get; set; } // int(11) unsigned

		#region Associations

		/// <summary>
		/// FK_friends_profiles
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_friends_profiles", BackReferenceName="Friends")]
		public Profile Profile { get; set; }

		/// <summary>
		/// FK_friends_profiles_2
		/// </summary>
		[Association(ThisKey="Targetid", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_friends_profiles_2", BackReferenceName="FkFriendsProfiles2BackReferences")]
		public Profile Target { get; set; }

		#endregion
	}

	[Table("games")]
	public partial class Game
	{
		[Column("id"),               PrimaryKey,  NotNull] public int    Id               { get; set; } // int(11)
		[Column("gamename"),                      NotNull] public string Gamename         { get; set; } // text
		[Column("secretkey"),           Nullable         ] public string Secretkey        { get; set; } // text
		[Column("description"),                   NotNull] public string Description      { get; set; } // text
		[Column("queryport"),                     NotNull] public int    Queryport        { get; set; } // int(11)
		[Column("backendflags"),                  NotNull] public int    Backendflags     { get; set; } // int(11)
		/// <summary>
		/// 1 = unavailable, 2 = temporarily unavailble, else available
		/// </summary>
		[Column("disabledservices"),              NotNull] public int    Disabledservices { get; set; } // int(11)
		[Column("keylist"),             Nullable         ] public string Keylist          { get; set; } // text
		[Column("keytypelist"),         Nullable         ] public string Keytypelist      { get; set; } // text
	}

	[Table("grouplist")]
	public partial class Grouplist
	{
		[Column("gameid"),     NotNull             ] public int    Gameid     { get; set; } // int(11)
		[Column("groupid"),    PrimaryKey, Identity] public int    Groupid    { get; set; } // int(11)
		[Column("maxwaiting"), NotNull             ] public int    Maxwaiting { get; set; } // int(11)
		[Column("name"),       NotNull             ] public string Name       { get; set; } // text
		[Column("numplayers"), NotNull             ] public int    Numplayers { get; set; } // int(11)
		[Column("numservers"), NotNull             ] public int    Numservers { get; set; } // int(11)
		[Column("numwaiting"), NotNull             ] public int    Numwaiting { get; set; } // int(11)
		[Column("other"),      NotNull             ] public string Other      { get; set; } // text
		[Column("password"),   NotNull             ] public int    Password   { get; set; } // int(11)
		[Column("updatetime"), NotNull             ] public int    Updatetime { get; set; } // int(11)
	}

	[Table("messages")]
	public partial class Message
	{
		[Column("id"),          PrimaryKey,  Identity] public uint     Id            { get; set; } // int(10) unsigned
		[Column("from"),        NotNull              ] public uint     From          { get; set; } // int(10) unsigned
		[Column("to"),          NotNull              ] public uint     To            { get; set; } // int(10) unsigned
		[Column("date"),        NotNull              ] public DateTime Date          { get; set; } // timestamp
		[Column("message"),     NotNull              ] public string   MessageColumn { get; set; } // varchar(200)
		[Column("namespaceid"),    Nullable          ] public uint?    Namespaceid   { get; set; } // int(10) unsigned

		#region Associations

		/// <summary>
		/// FK_messages_profiles_2
		/// </summary>
		[Association(ThisKey="To", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_messages_profiles_2", BackReferenceName="FkMessagesProfiles2BackReferences")]
		public Profile FkMessagesProfiles2 { get; set; }

		/// <summary>
		/// FK_messages_profiles
		/// </summary>
		[Association(ThisKey="From", OtherKey="Profileid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_messages_profiles", BackReferenceName="Messages")]
		public Profile Profile { get; set; }

		#endregion
	}

	/// <summary>
	/// statusstring
	/// </summary>
	[Table("profiles")]
	public partial class Profile
	{
		[Column("profileid"),        PrimaryKey,  Identity] public uint   Profileid        { get; set; } // int(11) unsigned
		[Column("userid"),           NotNull              ] public uint   Userid           { get; set; } // int(11) unsigned
		[Column("nick"),             NotNull              ] public string Nick             { get; set; } // varchar(30)
		[Column("status"),              Nullable          ] public sbyte? Status           { get; set; } // tinyint(3) unsigned
		[Column("statstring"),       NotNull              ] public string Statstring       { get; set; } // varchar(50)
		[Column("firstname"),        NotNull              ] public string Firstname        { get; set; } // varchar(30)
		[Column("lastname"),         NotNull              ] public string Lastname         { get; set; } // varchar(30)
		[Column("publicmask"),       NotNull              ] public int    Publicmask       { get; set; } // int(11)
		[Column("latitude"),         NotNull              ] public float  Latitude         { get; set; } // float(10,0)
		[Column("longitude"),        NotNull              ] public float  Longitude        { get; set; } // float(10,0)
		[Column("aim"),                 Nullable          ] public string Aim              { get; set; } // varchar(50)
		[Column("picture"),          NotNull              ] public int    Picture          { get; set; } // int(11)
		[Column("occupationid"),        Nullable          ] public int?   Occupationid     { get; set; } // int(11)
		[Column("incomeid"),            Nullable          ] public int?   Incomeid         { get; set; } // int(11)
		[Column("industryid"),          Nullable          ] public int?   Industryid       { get; set; } // int(11)
		[Column("marriedid"),           Nullable          ] public int?   Marriedid        { get; set; } // int(11)
		[Column("childcount"),          Nullable          ] public int?   Childcount       { get; set; } // int(11)
		[Column("interests1"),          Nullable          ] public int?   Interests1       { get; set; } // int(11)
		[Column("ownership1"),          Nullable          ] public int?   Ownership1       { get; set; } // int(11)
		[Column("connectiontype"),      Nullable          ] public int?   Connectiontype   { get; set; } // int(11)
		[Column("sex"),                 Nullable          ] public sbyte? Sex              { get; set; } // tinyint(1) unsigned
		[Column("zipcode"),             Nullable          ] public string Zipcode          { get; set; } // varchar(10)
		[Column("countrycode"),      NotNull              ] public string Countrycode      { get; set; } // varchar(3)
		[Column("homepage"),            Nullable          ] public string Homepage         { get; set; } // varchar(75)
		[Column("birthday"),            Nullable          ] public int?   Birthday         { get; set; } // int(2)
		[Column("birthmonth"),          Nullable          ] public int?   Birthmonth       { get; set; } // int(2)
		[Column("birthyear"),           Nullable          ] public int?   Birthyear        { get; set; } // int(4)
		[Column("location"),            Nullable          ] public string Location         { get; set; } // varchar(127)
		[Column("icquin"),              Nullable          ] public uint?  Icquin           { get; set; } // int(8) unsigned
		[Column("quietflags"),       NotNull              ] public sbyte  Quietflags       { get; set; } // tinyint(4)
		[Column("streetaddr"),          Nullable          ] public string Streetaddr       { get; set; } // text
		[Column("streeaddr"),           Nullable          ] public string Streeaddr        { get; set; } // text
		[Column("city"),                Nullable          ] public string City             { get; set; } // text
		[Column("cpubrandid"),       NotNull              ] public int    Cpubrandid       { get; set; } // int(11)
		[Column("cpuspeed"),         NotNull              ] public short  Cpuspeed         { get; set; } // smallint(6)
		[Column("memory"),           NotNull              ] public sbyte  Memory           { get; set; } // tinyint(4)
		[Column("videocard1string"),    Nullable          ] public string Videocard1string { get; set; } // text
		[Column("videocard1ram"),    NotNull              ] public sbyte  Videocard1ram    { get; set; } // tinyint(4)
		[Column("videocard2string"),    Nullable          ] public string Videocard2string { get; set; } // text
		[Column("videocard2ram"),    NotNull              ] public sbyte  Videocard2ram    { get; set; } // tinyint(4)
		[Column("subscription"),     NotNull              ] public int    Subscription     { get; set; } // int(11)
		[Column("adminrights"),      NotNull              ] public int    Adminrights      { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FK_addrequests_profiles_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Profileid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Addrequest> Addrequests { get; set; }

		/// <summary>
		/// FK1_profile_profileid_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Profileid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<@namespace> FK1profileprofileids { get; set; }

		/// <summary>
		/// FK_addrequests_profiles_2_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Targetid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Addrequest> FkAddrequestsProfiles2BackReferences { get; set; }

		/// <summary>
		/// FK_friends_profiles_2_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Targetid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Friend> FkFriendsProfiles2BackReferences { get; set; }

		/// <summary>
		/// FK_messages_profiles_2_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="To", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Message> FkMessagesProfiles2BackReferences { get; set; }

		/// <summary>
		/// FK_friends_profiles_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="Profileid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Friend> Friends { get; set; }

		/// <summary>
		/// FK_messages_profiles_BackReference
		/// </summary>
		[Association(ThisKey="Profileid", OtherKey="From", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Message> Messages { get; set; }

		/// <summary>
		/// FK_profiles_users
		/// </summary>
		[Association(ThisKey="Userid", OtherKey="Userid", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_profiles_users", BackReferenceName="Profiles")]
		public User User { get; set; }

		#endregion
	}

	[Table("users")]
	public partial class User
	{
		[Column("userid"),        PrimaryKey,  Identity] public uint      Userid        { get; set; } // int(11) unsigned
		[Column("email"),         NotNull              ] public string    Email         { get; set; } // varchar(50)
		[Column("password"),      NotNull              ] public string    Password      { get; set; } // varchar(32)
		[Column("emailverified"), NotNull              ] public sbyte     Emailverified { get; set; } // tinyint(1) unsigned
		[Column("createddate"),   NotNull              ] public DateTime  Createddate   { get; set; } // timestamp
		[Column("useddate"),      NotNull              ] public DateTime  Useddate      { get; set; } // timestamp
		[Column("deleted"),       NotNull              ] public bool      Deleted       { get; set; } // tinyint(1)
		[Column("banned"),        NotNull              ] public bool      Banned        { get; set; } // tinyint(1)
		[Column("lastip"),           Nullable          ] public string    Lastip        { get; set; } // varchar(16)
		[Column("lastonline"),       Nullable          ] public DateTime? Lastonline    { get; set; } // timestamp

		#region Associations

		/// <summary>
		/// FK_profiles_users_BackReference
		/// </summary>
		[Association(ThisKey="Userid", OtherKey="Userid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Profile> Profiles { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static @namespace Find(this ITable<@namespace> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Friend Find(this ITable<Friend> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Game Find(this ITable<Game> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Grouplist Find(this ITable<Grouplist> table, int Groupid)
		{
			return table.FirstOrDefault(t =>
				t.Groupid == Groupid);
		}

		public static Message Find(this ITable<Message> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Profile Find(this ITable<Profile> table, uint Profileid)
		{
			return table.FirstOrDefault(t =>
				t.Profileid == Profileid);
		}

		public static User Find(this ITable<User> table, uint Userid)
		{
			return table.FirstOrDefault(t =>
				t.Userid == Userid);
		}
	}
}

#pragma warning restore 1591
